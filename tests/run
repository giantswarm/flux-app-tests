#!/usr/bin/env bash

help() {
  echo -e "
Usage:
  start | validate [test_name]

Examples:
  # Runn all tests
  run start

  # Run specific test
  run start simple-app-cr-delivery

  # Validate test
  run validate simple-app-cr-delivery
"

  exit 1
}

generate_gitrepository() {
cat <<EOF
apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: GitRepository
metadata:
  name: flux-app-tests
  namespace: default
spec:
  interval: 1m
  url: https://github.com/giantswarm/flux-app-tests
  secretRef:
    name: tests-github-credentials
  ref:
    branch: feature/init-with-data
  ignore: |
    tests/test_cases/**/result
---
EOF
}

generate_kustomization() {
    cat <<EOF
apiVersion: kustomize.toolkit.fluxcd.io/v1beta1
kind: Kustomization
metadata:
  name: test-$1
  namespace: default
spec:
  serviceAccountName: automation
  prune: true
  interval: 1m
  path: "./tests/test_cases/$1"
  sourceRef:
    kind: GitRepository
    name: flux-app-tests
  timeout: 2m
---
EOF
}

generate_all_tests() {
    for dir in $(dirname $0)/test_cases/*/
    do
      generate_kustomization $(basename $dir)
    done
}

start() {
    generate_gitrepository
    if [ -z "$1" ]
    then
        generate_all_tests
    else
        generate_kustomization $1
    fi
}

validate_test() {
    ERROR=$(kubectl diff -f $(dirname $0)/test_cases/$1/result/appcrs.yaml 2>&1 >/dev/null)
    if [ $? -eq 0 ]
    then
        echo [$1]...OK
    else
        echo [$1]...BAD
        echo REASON: $ERROR
    fi
}

validate_all_tests() {
    for dir in $(dirname $0)/test_cases/*/
    do
      validate_test $(basename $dir)
    done
}

validate() {
    if [ -z "$1" ]
    then
        validate_all_tests
    else
        validate_test $1
    fi
}

case "$1" in
    "start")
        start $2
        ;;
    "validate")
        validate $2
        ;;
    *)
        help
esac
